import { bold } from "@/client";
import "./globals.css";
import type { Settings } from "@boldvideo/bold-js";

export const metadata = {
  title: "Bold Demo Site",
  description: "Generated by bold.video",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  let theme;

  try {
    const { data: settings } = await bold.settings();
    theme = settings?.theme_config;
  } catch (error) {
    console.error("Failed to fetch settings:", error);
  }

  return (
    <html lang="en">
      <head>
        {theme && (
          <style
            dangerouslySetInnerHTML={{
              __html: `
              :root {
                --radius: ${theme.radius};
                
                --background: ${theme.light.background};
                --foreground: ${theme.light.foreground};
                --card: ${theme.light.card};
                --popover: ${theme.light.popover};
                --card-foreground: ${theme.light["card-foreground"]};
                --popover-foreground: ${theme.light["popover-foreground"]};
                --primary: ${theme.light.primary};
                --primary-foreground: ${theme.light["primary-foreground"]};
                --secondary: ${theme.light.secondary};
                --secondary-foreground: ${theme.light["secondary-foreground"]};
                --muted: ${theme.light.muted};
                --muted-foreground: ${theme.light["muted-foreground"]};
                --accent: ${(theme.light as any).accent};
                --accent-foreground: ${(theme.light as any)["accent-foreground"]};
                --destructive-foreground: ${theme.light["destructive-foreground"]};
                --destructive: ${theme.light.destructive};
                --border: ${theme.light.border};
                --input: ${theme.light.input};
                --ring: ${theme.light.ring};
                --sidebar: ${(theme.light as any).sidebar};
                --sidebar-foreground: ${(theme.light as any)["sidebar-foreground"]};
                --sidebar-primary: ${(theme.light as any)["sidebar-primary"]};
                --sidebar-primary-foreground: ${(theme.light as any)["sidebar-primary-foreground"]};
                --sidebar-accent: ${(theme.light as any)["sidebar-accent"]};
                --sidebar-accent-foreground: ${(theme.light as any)["sidebar-accent-foreground"]};
                --sidebar-border: ${(theme.light as any)["sidebar-border"]};
                --sidebar-ring: ${(theme.light as any)["sidebar-ring"]};
              }
              
              .dark {
                --background: ${theme.dark.background};
                --foreground: ${theme.dark.foreground};
                --card: ${theme.dark.card};
                --card-foreground: ${theme.dark["card-foreground"]};
                --popover: ${theme.dark.popover};
                --popover-foreground: ${theme.dark["popover-foreground"]};
                --primary: ${theme.dark.primary};
                --primary-foreground: ${theme.dark["primary-foreground"]};
                --secondary: ${theme.dark.secondary};
                --secondary-foreground: ${theme.dark["secondary-foreground"]};
                --muted: ${theme.dark.muted};
                --muted-foreground: ${theme.dark["muted-foreground"]};
                --accent: ${(theme.dark as any).accent};
                --accent-foreground: ${(theme.dark as any)["accent-foreground"]};
                --destructive-foreground: ${theme.dark["destructive-foreground"]};
                --destructive: ${theme.dark.destructive};
                --border: ${theme.dark.border};
                --input: ${theme.dark.input};
                --ring: ${theme.dark.ring};
                --sidebar: ${(theme.dark as any).sidebar};
                --sidebar-foreground: ${(theme.dark as any)["sidebar-foreground"]};
                --sidebar-primary: ${(theme.dark as any)["sidebar-primary"]};
                --sidebar-primary-foreground: ${(theme.dark as any)["sidebar-primary-foreground"]};
                --sidebar-accent: ${(theme.dark as any)["sidebar-accent"]};
                --sidebar-accent-foreground: ${(theme.dark as any)["sidebar-accent-foreground"]};
                --sidebar-border: ${(theme.dark as any)["sidebar-border"]};
                --sidebar-ring: ${(theme.dark as any)["sidebar-ring"]};
              }
            `,
            }}
          />
        )}
      </head>
      <body className="bg-background text-foreground">{children}</body>
    </html>
  );
}
